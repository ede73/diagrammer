digraph {
    compound=true;
    rankdir=TD;
    q[ label="tamakin" ];
    w[ label="on" ];
    subgraph cluster_1 {
        label="something would happend";
        a1;
        b1;
    }//end of 1 if
    //COND 1 if
    conditional_endif_1[ shape=circle, label="", width=0.01, height=0.01 ];
    conditional_if_1[ shape=diamond, fixedsize=true, width=1, height=1, label="something would happend" ];
    w->conditional_if_1;
    conditional_if_1->a1[ label="YES", color=green, lhead=cluster_1 ];
    b1->conditional_endif_1[ label="" ];
    subgraph cluster_2 {
        label="something probably would not happen";
        a2;
        b2;
    }//end of 2 elseif
    //COND 2 elseif
    conditional_elseif_2[ shape=diamond, fixedsize=true, width=1, height=1, label="something probably would not happen" ];
    conditional_if_1->conditional_elseif_2[ label="NO", color=red ];
    conditional_elseif_2->a2[ label="YES", color=green, lhead=cluster_2 ];
    b2->conditional_endif_1[ label="" ];
    subgraph cluster_3 {
        label="or if i see a flying bird";
        a3;
        b3;
    }//end of 3 elseif
    //COND 3 elseif
    conditional_elseif_3[ shape=diamond, fixedsize=true, width=1, height=1, label="or if i see a flying bird" ];
    conditional_elseif_2->conditional_elseif_3[ label="NO", color=red ];
    conditional_elseif_3->a3[ label="YES", color=green, lhead=cluster_3 ];
    b3->conditional_endif_1[ label="" ];
    subgraph cluster_4 {
        label="else";
        a4;
        b4;
    }//end of 4 else
    //COND 4 else
    conditional_else_4[ shape=diamond, fixedsize=true, width=1, height=1, label="else" ];
    conditional_elseif_3->conditional_else_4[ label="NO", color=red ];
    conditional_else_4->a4[ label="YES", color=green, lhead=cluster_4 ];
    b4->conditional_endif_1[ label="" ];
    subgraph cluster_5 {
        label="endif";
    }//end of 5 endif
    //COND 5 endif
    conditional_else_4->conditional_endif_1[ color=red ];
    conditional_endif_1->outside;
    outside;
    end;
    //links start
    q->w;
    a1->b1;
    a2->b2;
    a3->b3;
    a4->b4;
    outside->end;
}
