{
	"filename": "//Blaast TCP output\nbs;BlaastStack\nc;CWrapper\ns;SlirpInterface\nio;ip_output\nto;tcp_output\n\n",
	"output": "//UDP Sending from PHONE to NETWORK depicted\n$(purple:#9977ff)\ngroup socket;Socket\n  sorecvfrom\ngroup end\n \ngroup Udp\n //INCOMING to TCP\n udp_output#00bfff \ngroup end\n\ngroup IPOutput\n  ip_output$(purple)\ngroup end \n\ngroup PhoneJava\n  udpFromB8#00ffee\ngroup end\n\ngroup IF\n  if_output$(purple) \n  if_start$(purple)\ngroup end \n\ngroup b8;Temporary B8 routing\n  handleIncomingNonFree#ffee00\ngroup end\n\nsorecvfrom>udp_output>ip_output>if_output>if_start>handleIncomingNonFree \nudpFromB8>ip_output",
	"input": "bs;BlaastStack\nc;CWrapper\ns;SlirpInterface\nio;ip_onput\nto;tcp_output\n\n",
	"tcp": "$(red:#ff0000)\n$(blue:#0000ff)\n$(yellow:#ffff00)\n \nshape box\nclosed$(red);CLOSED\nclosed_end$(red);closed\\nBack to start\nlisten$(yellow);LISTEN\nsyn_received$(grey:#888888);SYN\\nRECEIVED\nsyn_sent$(grey);SYN\\nSENT\nestablished#00ff00;ESTABLISHED\\ndata xchange occurs\n\n{ PassiveClose$(lightblue:#afeeee);Passive CLOSE\n  close_wait$(yellow);CLOSE WAIT\n  last_ack$(yellow);LAST ACK\n}\n\n{ ActiveClose$(lightblue);Active CLOSE\n  fin_wait1$(yellow);FIN WAIT 1\n  closing$(yellow);CLOSING\n  fin_wait2$(yellow);FIN WAIT 2\n  time_wait$(yellow);TIME WAIT\n}\n\n//unusual event\nsyn_sent.>closed;CLOSE/-\nsyn_sent.>syn_received;SYN/SYN+ACK\\n(simultaneous open)\nlisten.>syn_sent;SEND/SYN\nlisten.>closed;CLOSE/-\nsyn_received.>listen;RST/-\nsyn_received.>fin_wait1;CLOSE/FIN\nfin_wait1.>closing;FIN/ACK\nfin_wait1.>time_wait;FIN+ACK/ACK\nclosing.>time_wait\n\n// client / receiver path\nclosed>$(red)syn_sent;CONNECT/SYN(1/3 of 3w/hs)\nsyn_sent>$(red)established;SYN+ACK/ACK(3/3 of 3w/hs)\nestablished>$(red)fin_wait1;CLOSE/FIN\nfin_wait1>$(red)fin_wait2;ACK/-\nfin_wait2>$(red)time_wait;FIN/ACK\ntime_wait>$(red)closed_end;Timeout\n\n// server / sender path\nclosed>$(blue)listen;LISTEN/-\nlisten>$(blue)syn_received;SYN/SYN+ACK(2/3 of 3w/hs)\nsyn_received>$(blue)established;ACK/-\nestablished>$(blue)close_wait;FIN/ACK\nclose_wait>$(blue)last_ack;CLOSE/FIN\nlast_ack>$(blue)closed_end",
	"slirp": "//UDP Sending from PHONE to NETWORK depicted\n{ PhoneJava\n  senddata#7777ff;Send data\n}\n\n{ IPInput\n  ip_input$(purple:#9977ff)\n  senddata>ip_input\n} \n\n{ TcpInput\n  tcp_input$(purple)\n  shape diamond\n  foundtcp#77ff77\n  shape default\n  tcp_input>foundtcp>connect\n}\n  \n{ Icmp\n  icmp_input$(purple)\n  icmp_error$(purple)\n}\n\n{ Udp\n  udp_input$(purple)\n  findudp_so;Find UDP\n  shape diamond\n  foundudp#77ff77;Found\n  udp_emu#77ff77\n  shape default\n  udpseen;seen\n  udpnew;Create SO\n  sosendto\n  udp_input> findudp_so\n  findudp_so>foundudp\n  foundudp>udpnew,udpseen\n  udpseen,udpnew>udp_emu\n  udp_emu>sosendto\n  sosendto>icmp_error\n}\n\n{ b8;Temporary B8 routing\n b8udpwrap#779999\n b8tcpwrap#779999\n udp_input>b8udpwrap;IF b8 traffic\n tcp_input>b8tcpwrap;IF b8 traffic\n}\n\nip_input>tcp_input,udp_input,icmp_input ",
	"slirp_mainloop": "start main_loop\nip_slowtimo;ip_slowtimo\\nIP Timer process, free expired fragments\ntcp_fasttimo;tcp_fasttimo\\nProcess delayed ACKs\ntcp_slowtimo;tcp_slowtimo\\nper500ms\\nupdate timers\\nFSM actions\ndomainsockets;Read domain sockets\\ncall ip_input\nmain_loop>initSelect>select>tcp_fasttimo>tcp_output>ip_slowtimo\nip_slowtimo>tcp_slowtimo>domainsockets \ndomainsockets<>ip_input\n\n{ checkSocketsGroup\nshape loopin\nscansockets\nshape default\nscansockets>sorecvoob>tcp_connect>soread>ctcp_output>tcp_input>sowrite\nshape loopout\ncheckSocketsDone\nshape default\nsowrite>checkSocketsDone \n}\n\ndomainsockets>checkSocketsGroup \n\ncheckSocketsDone>receiveUdpPackets>main_loop\n",
	"slirp_incoming_udp": "//UDP Sending from PHONE to NETWORK depicted\n$(purple:#9977ff)\ngroup socket;Socket\n  sorecvfrom\n}\n \n{ Udp\n //INCOMING to TCP\n udp_output#00bfff \n}\n\n{ IPOutput\n  ip_output$(purple)\ngroup end \n\n{ PhoneJava\n  udpFromB8#00ffee\n}\n\n{ IF\n  if_output$(purple)\n  if_start$(purple)\n} \n\n{ b8;Temporary B8 routing\n  handleIncomingNonFree#ffee00\n}\n\nsorecvfrom>udp_output>ip_output>if_output>if_start>handleIncomingNonFree \nudpFromB8>ip_output",
	"tun_routing": "//In B8 decoding case with dapple routing\n$(udp:#55aa55) $(tcp:#0000ff) $(tunnel:#ff0000) $(l3:#ff00ff)\n$(java:#aa44aa) $(native:#999999) $(internet:#09aede)\n\n//where grouped, freed to visual achievement \ninternet b8$(tunnel) phonestack tun$(tunnel);TUN tunnel\n\ngroup callbacks$(java);Callbacks\n  callSendUdpToB8$(udp)  callSendTcpToB8$(tcp)  callIncomingNonFree  callIncomingFree\ngroup end\n\n//In VpnThread androidTunReader\ngroup VpnThread$(java);TUN reader\n  androidTunReader  androidVpnInput\ngroup end\n\ngroup JNI$(native);JNI\n  outgoingFree outgoingNonFree\n  group nativestack#909090;SLIRP\n    group nativesocket#888888;Native socket API to internet\n      send receive\n    group end\n    group fakesocket#888888;Fake socket API to B8\n      sendB8;send\n      receiveB8;receive\n    group end\n  group end\ngroup end\n\n \n//internal static routes\noutgoingNonFree.>$(l3)send>$(internet)\"sub socket\\nAPI\"internet\ninternet>$(internet)\"sub socket\\nAPI\"receive\n$(l3)tun>$(tunnel)\"L3 IP\"androidTunReader \n\nandroidTunReader.>$(tunnel)androidVpnInput.>$(tunnel)\"Route2B8\"outgoingFree,\"RouteToNet\"outgoingNonFree\nandroidVpnInput>androidVpnInput;loop&read L3\\noutgoing\n\n//outgoing B8 UDP\noutgoingFree\n    .>$(l3)\"convert to B8\"sendB8\n     >$(udp)\"is UDP\"callSendUdpToB8\n     >$(udp)\"frame B8/UDP\"tun\n     <>$(udp)\"Frame/send\\nUDP\"b8 \n\n//outgoing B8 tcp\nsendB8\n    >$(tcp)\"is TCP\"callSendTcpToB8\n    >$(tcp)\"frame B8/tcp\"tun\n    <>$(tcp)\"Frame/send\\nTCP\"b8 \n\n//outgoing tunnel\ntun<>$(tunnel)\"tunnel L3\\nand B8\"b8\n \n//incoming internet data SIMPLIFIED!\nreceive>$(l3)callIncomingNonFree>$(l3)phonestack\nreceive>$(l3)callIncomingFree>$(l3)phonestack \n",
	"tcp_connection": "generator mscgen\n$(l:#00ff00) $(r:#ff0000)\n\np;Phone\ni;VPN input\nr;androidTunReader\ns;socket_B8\nm;mainloop\nii;ip_input\nti;tcp_input\nst;callsendTcpToB8\no;Vpn output\n\np-\"Connect to 88.112.127.107:12345,id=45683\"p>\"SYN,id=45683\"i>r.>s.p;Time passes \ns<>\"Read data\"m>ii>ti>\"b8\"ti>\"existing socket?\"ti>\"create new socket\"ti>st.>$(l)\"MSG_CONNECT,stream 3103536784\"o\nst.>$(r)\"SYN|ACK,id=20\"o.p;Time passes\n\np-\"ACK the SYN|ACK,id=45684\"p>\"ACK\"i>r.>s.p;Time passes \ns<>\"Read data\"m>ii>ti>\"not b8\"ti>\"existing socket!\"ti\n",
	"tcpconnect": "p;Phone\ni;VPN input\nr;androidTunReader\ns;socket_B8\nm;mainloop\no;Vpn output\n\np>\"SYN\"i>r>s\n\n\n "
}