getNode (User,undefined)
   no graphroot,init - in getGraphRoot
      ...Initialize emptyroot [object Object]
   Create new node name=User
   pushObject Node(User)to GraphRoot
     in getNode gotNode Node(User)
getSubGraph() NEW SubGraph:[object Object]/undefined
   push SubGraph SubGraph(1) to [object Object]
   pushObject SubGraph(1)to GraphRoot
   Set entrance to Node(User)
    getLink type(>) l(Node(User)) r(SubGraph(1))
     TEST value(DoWork) for color
PUSH LINK:Link(>== LNode(User), RSubGraph(1),label=DoWork)
getNode (A,undefined)
   Create new node name=A
   pushObject Node(A)to SubGraph(1)
     in getNode gotNode Node(A)
getNode (B,undefined)
   Create new node name=B
   pushObject Node(B)to SubGraph(1)
     in getNode gotNode Node(B)
    getLink type(>) l(Node(A)) r(Node(B))
     TEST value(createRequest) for color
PUSH LINK:Link(>== LNode(A), RNode(B),label=createRequest)
getNode (A,undefined)
     in getNode gotNode Node(A)
    getLink type(>) l(Node(B)) r(Node(A))
     TEST value(back call) for color
PUSH LINK:Link(>== LNode(B), RNode(A),label=back call)
getNode (B,undefined)
     in getNode gotNode Node(B)
    getLink type(>) l(Node(A)) r(Node(B))
     TEST value(response) for color
PUSH LINK:Link(>== LNode(A), RNode(B),label=response)
getNode (C,undefined)
   Create new node name=C
   pushObject Node(C)to SubGraph(1)
     in getNode gotNode Node(C)
    getLink type(>) l(Node(B)) r(Node(C))
     TEST value(DoWork) for color
PUSH LINK:Link(>== LNode(B), RNode(C),label=DoWork)
getNode (B,undefined)
     in getNode gotNode Node(B)
    getLink type(>) l(Node(C)) r(Node(B))
     TEST value(WorkDone) for color
PUSH LINK:Link(>== LNode(C), RNode(B),label=WorkDone)
getNode (A,undefined)
     in getNode gotNode Node(A)
    getLink type(>) l(Node(B)) r(Node(A))
     TEST value(RequestCreated) for color
PUSH LINK:Link(>== LNode(B), RNode(A),label=RequestCreated)
getNode (User,undefined)
     in getNode gotNode Node(User)
   Set exit to Node(User)
    getLink type(>) l(SubGraph(1)) r(Node(User))
     TEST value(Done) for color
PUSH LINK:Link(>== LSubGraph(1), RNode(User),label=Done)
@startuml
autonumber
participant  User
{"name":1,"OBJECTS":[{"name":"A"},{"name":"B"},{"name":"C"}],"isSubGraph":true,"entrance":{"name":"User"},"exitnode":1,"exit":{"name":"User"}}
  participant  A
  participant  B
  participant  C
  User->A:DoWork
  activate A
  A->B:createRequest
  activate B
  B->A:back call
  deactivate B
  A->B:response
  activate B
  B->C:DoWork
  activate C
  C->B:WorkDone
  deactivate C
  B->A:RequestCreated
  deactivate B
A->User:Done
deactivate A
@enduml
