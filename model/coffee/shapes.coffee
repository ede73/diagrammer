getShape = (shapes, o, fmt) ->
  return ""  if o is `undefined` or o is 0
  o = o.toLowerCase()
  if o of shapes
    " " + fmt.format(shapes[o]) + " "
  else
    " " + fmt.format(shapes["default"]) + " "
shapes =
  blockdiag:
    default: "box"
    invis: "invis"
    
    # TODO? 
    record: "box"
    doublecircle: "endpoint"
    box: "box"
    rect: "box"
    rectangle: "box"
    square: "square"
    roundedbox: "roundedbox"
    dots: "dots"
    circle: "circle"
    ellipse: "ellipse"
    diamond: "diamond"
    minidiamond: "minidiamond"
    note: "note"
    mail: "mail"
    cloud: "cloud"
    actor: "actor"
    beginpoint: "flowchart.beginpoint"
    endpoint: "flowchart.endpoint"
    condition: "flowchart.condition"
    database: "flowchart.database"
    terminator: "flowchart.terminator"
    input: "flowchart.input"
    loopin: "flowchart.loopin"
    loop: "flowchart.loopin"
    loopstart: "flowchart.loopin"
    loopout: "flowchart.loopout"
    loopend: "flowchart.loopout"

  actdiag:
    default: "box"
    invis: "invis"
    
    # TODO? 
    record: "box"
    doublecircle: "endpoint"
    box: "box"
    rect: "box"
    rectangle: "box"
    square: "square"
    roundedbox: "roundedbox"
    dots: "dots"
    circle: "circle"
    ellipse: "ellipse"
    diamond: "diamond"
    minidiamond: "minidiamond"
    note: "note"
    mail: "mail"
    cloud: "cloud"
    actor: "actor"
    beginpoint: "flowchart.beginpoint"
    endpoint: "flowchart.endpoint"
    condition: "flowchart.condition"
    database: "flowchart.database"
    terminator: "flowchart.terminator"
    input: "flowchart.input"
    loopin: "flowchart.loopin"
    loop: "flowchart.loopin"
    loopstart: "flowchart.loopin"
    loopout: "flowchart.loopout"
    loopend: "flowchart.loopout"

  digraph:
    default: "box"
    invis: "invis"
    record: "record"
    doublecircle: "doublecircle"
    box: "box"
    rect: "box"
    rectangle: "box"
    square: "square"
    roundedbox: "box"
    dots: "point"
    circle: "circle"
    ellipse: "ellipse"
    diamond: "diamond"
    minidiamond: "Mdiamond"
    minisquare: "Msquare"
    note: "note"
    mail: "tab"
    cloud: "tripleoctagon"
    actor: "cds"
    beginpoint: "circle"
    endpoint: "doublecircle"
    condition: "Mdiamond"
    database: "Mcircle"
    terminator: "ellipse"
    input: "parallelogram"
    loopin: "house"
    loop: "house"
    loopstart: "house"
    loopout: "invhouse"
    loopend: "invhouse"
