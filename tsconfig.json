{
  "exclude": [
    "*.js",
    "model/*.js",
    "**/*.js",
    "node_modules",
    "node_modules/*",
    // No idea why, but this config causes tsc to think diagrammer_parser is a target and complains about overwriting it (even if it is just imported, not generated, not even a typescript file)
    "build/diagrammer_parser.js",
    "diagrammer_parser.js",
    "**/diagrammer_parser.js",
    "build/diagrammer_lexer.js",
    "/home/ede/diagrammer/build/diagrammer_lexer.js",
    "build/**",
    "**/build/**",
  ],
  "typeAcquisition": {
    "enable": true,
    "include": [
      "model",
      "node",
      "vscode",
      "jest",
      "d3",
      "jquery",
      "gojs",
      "viz.js",
      "jest-puppeteer",
      "puppeteer"
    ]
  },
  "compilerOptions": {
    "target": "es2017",
    "module": "ES6",
    "sourceMap": true,
    "baseUrl": ".",
    "paths": {
      "https://cdn.jsdelivr.net/npm/d3@7/+esm": [
        "./node_modules/@types/d3"
      ],
      "//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js": [
        "./node_modules/@types/jquery"
      ],
      "@generators/*": [
        "generators/*"
      ]
    },
    "allowJs": true,
    "removeComments": true,
    // not even this AND exclude PREVENT tsc going to node_modules
    // completely removing node_modules works, transpiles beautifully still! WTF?
    //"noImplicitAny": false,
    // tsc is "TOTALLY" nuts,i've echo > support.ts, + this config, tsc runs thru node_modules :)
    // Disabling lib check helps (or if puppeteer, jest, babel type errors get fixed)
    "skipLibCheck": true,
    // Be as strict as possible
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictFunctionTypes": true,
    "strictPropertyInitialization": true,
    "strictNullChecks": true
  }
}