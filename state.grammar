%start S

%%

S
	: contents EOF
		{
			debug("contents EOF");
			var generator=getGraphRoot(yy).getGenerator();
			if (yy.OUTPUT)
			  generator=yy.OUTPUT
			if ("actdiag" == generator){
				actdiag(yy);
			}else if ("blockdiag" == generator){
				blockdiag(yy);
			}else if ("nwdiag" == generator){
				nwdiag(yy);
			}else if ("seqdiag" == generator){
				seqdiag(yy);
			}else if ("mscgen" == generator){
				mscgen(yy);
			}else{
				//rankdir available ONLY IN dot
				digraph(yy);
			}
			return $1;
		}
	;

contents
	: content
		{$$ = $1;}
	| contents content
		{$$ =  $1 + $2;}
	;

getColorOrVariable
	: VARIABLE {
			$$=processVariable(yy,$1);
	}
	| COLOR	{$$=$1};
	
readNodeAttrs
	: NAME getColorOrVariable {
		debug("NAME VARIABLE"+" SS="+$$+",S0="+$0+",S1="+$1+",S2="+$2);
		$$=getNode(yy,$1).setColor($2);
	}
/*	: NAME VARIABLE{
		debug("NAME VARIABLE"+" SS="+$$+",S0="+$0+",S1="+$1+",S2="+$2);
		$$=getNode(yy,$1).setColor($2);
	}
	| NAME COLOR{
		debug("NAME COLOR"+" SS="+$$+",S0="+$0+",S1="+$1+",S2="+$2);
		$$=getNode(yy,$1).setColor($2);
	}*/
	| NAME IMAGE
	{
		debug("NAME IMAGE"+" SS="+$$+",S0="+$0+",S1="+$1+",S2="+$2);
		$$=getNode(yy,$1).setImage($2);
	}
	| NAME {
		debug("NAME"+" SS="+$$+",S0="+$0+",S1="+$1);
		$$=getNode(yy,$1);
	};

/*
NOT BEST...return Node or Group, but some commands allow only Node and some just Group...
But it gets thing done..for now!
TODO: Fix it

This means getNode MUST be able to return a Group as well! If name matches!!
*/
readNodeOrGroup
	: readNodeOrGroup LISTSEP readNodeAttrs
		{
			debug("\readNodeOrGroup LISTSEP readNodeAttrs"+" SS="+$$+",S0="+$0+",S1="+$1+",S2="+$2+",S3="+$3);
			$$=getList(yy,$1,$3);
		}
	|readNodeAttrs
		{
			debug("readNodeAttrs"+" SS="+$$+",S0="+$0+",S1="+$1);
			$$=$1;
		};
targetName
	: targetName EVENT getColorOrVariable readNodeOrGroup LABEL
		{
			debug("targetName EVENT COLOR readNode LABEL"+" SS="+$$+",S0="+$0+",S1="+$1+",S2="+$2+",S3="+$3+",S4="+$4);
			$$=getLink(yy,$2,$1,$4,$5.substring(1),$3).right;
		}
	| targetName EVENT getColorOrVariable readNodeOrGroup
		{
			debug("targetName EVENT COLOR readNode"+" SS="+$$+",S0="+$0+",S1="+$1+",S2="+$2+",S3="+$3+",S4="+$4);
			$$=getLink(yy,$2,$1,$4,undefined,$3).right;
		}
	| targetName EVENT readNodeOrGroup LABEL
		{
			debug("targetName EVENT readNode LABEL"+" SS="+$$+",S0="+$0+",S1="+$1+",S2="+$2+",S3="+$3);
			if ($3 instanceof Group){
				$$=getLink(yy,$2,$1,getGroup(yy,$3),$4.substring(1)).right;
			}else{
				$$=getLink(yy,$2,$1,getNode(yy,$3),$4.substring(1)).right;
			}
		}
	| targetName EVENT readNodeOrGroup
		{
			debug("targetName EVENT readNode"+" SS="+$$+",S0="+$0+",S1="+$1+",S2="+$2+",S3="+$3);
			if ($3 instanceof Group){
				$$=getLink(yy,$2,$1,getGroup(yy,$3)).right;
			}else{
				$$=getLink(yy,$2,$1,getNode(yy,$3)).right;
			}
		}
	| readNodeOrGroup LABEL
		{
			debug("readNodeOrGroup LABEL"+" SS="+$$+",S0="+$0+",S1="+$1);
			$$.setLabel($2.substring(1));
		}
	| readNodeOrGroup
		{
			debug("readNodeOrGroup"+" SS="+$$+",S0="+$0+",S1="+$1);
		}
	;
groupTarget
	: NAME getColorOrVariable LABEL
		{{$$=getGroup(yy).setName($1).setColor($2).setLabel($3.substring(1));
		enterContainer(yy,$$);
		}}
	| getColorOrVariable LABEL
		{{$$=getGroup(yy).setColor($1).setLabel($2.substring(1));
		enterContainer(yy,$$);
		}}
	| LABEL
		{{$$=getGroup(yy).setLabel($1.substring(1));
		enterContainer(yy,$$);
		}}
	| NAME LABEL
		{{$$=getGroup(yy).setName($1).setLabel($2.substring(1));
		enterContainer(yy,$$);
		}}
	| NAME getColorOrVariable
		{{$$=getGroup(yy).setName($1).setColor($2);
		enterContainer(yy,$$);
		}}
	| NAME
		{{$$=getGroup(yy).setName($1);
		enterContainer(yy,$$);
		}}
	;
content
	: VARIABLE
		{{
			$$=processVariable(yy,$1)
		}}
	| SHAPE SHAPES
		{{
			if ($2=="default")
				$$=getGraphRoot(yy).setCurrentShape(undefined);
			else
				$$=getGraphRoot(yy).setCurrentShape($2);
		}}
	| EQUAL readNodeOrGroup
		{{
			if ($2 instanceof Node){
				getCurrentContainer(yy).setEqual(new Array($2));
			}else{
				getCurrentContainer(yy).setEqual($2);
			}
		}}
	| SHAPE NAME
		{{throw new Error("Expecting one of the shapes, got ("+$2+")");}}
	| LANDSCAPE
		{{$$=getGraphRoot(yy).setDirection("landscape");}}
	| GENERATOR NAME
		{{$$=getGraphRoot(yy).setGenerator($2);}}
	| VISUALIZER NAME
		{{$$=getGraphRoot(yy).setVisualizer($2);}}
	| PORTRAIT
		{{$$=getGraphRoot(yy).setDirection("portrait");}}
	| COMMENT
		{{$$="/*"+$1.substring(2)+"*/\n";}}
	| GROUP groupTarget
		{}
	| GROUP_END
		{{
			$$=exitContainer(yy);
		}}
	| START NAME
		//{$$="  {rank = same;null}\n  {rank = same; "+$2+"}\n  null [shape=plaintext, label=\"\"];\n"+$2+"[shape=doublecircle];\nnull->"+$2+";\n";}
		{$$=getGraphRoot(yy).setStart($2);}
	| targetName
		{
		debug("targetName"+" SS="+$$+",S0="+$0+",S1="+$1);
		//$$=getNode(yy,$1);
		//$2($$);
		}
	;

%% 
